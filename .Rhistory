scale_y_continuous(breaks = seq(0, max(data$Cantidad), by = paso_y)) +  # Personaliza el paso en el eje Y
theme_minimal()
# Agregar etiquetas de valores
p <- p + geom_text(aes(label = format(Cantidad, big.mark = ",", scientific = FALSE)), vjust = -0.5, size = 2.5, angle = 60)
# Imprimir el gráfico
print(p)
# Crear un gráfico de líneas
p <- ggplot(data, aes(x = Año, y = Cantidad)) +
geom_line(color = "dodgerblue") +
geom_point(color = "dodgerblue") +
labs(
title = "Número de certificaciones por año en toda la Universidad",
x = "Año",
y = "Cantidad de certificaciones"
) +
scale_x_continuous(breaks = c(1:22),
labels = c("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22")) +
scale_y_continuous(breaks = seq(0, max(data$Cantidad), by = paso_y)) +  # Personaliza el paso en el eje Y
theme_minimal()
# Agregar etiquetas de valores
p <- p + geom_text(aes(label = format(Cantidad, big.mark = ",", scientific = FALSE)), vjust = -0.5, size = 2.5, angle = 60)
# Imprimir el gráfico
print(p)
ggsave("graficoCertificacionesUACManual.pdf", plot = p,width = 8, height = 6, units = "in", device = "pdf")
data_FnF <- data.frame(
Año = 1:22,
CH_Favorables = c(1709, 466, 1051, 1493, 896, 1075, 1482, 1914, 4447, 4204, 4850, 2501, 4493, 5345, 6242, 6111, 6225, 6686, 6950, 3487, 9585, 3104),
GAM_Favorables = c(3950, 0, 0, 0, 0, 0, 0, 1622, 6951, 7147, 8846, 5264, 10846, 12594, 14426, 16010, 16896, 17182, 18591, 9168, 26384, 8335),
DV_Favorables = c(1046, 114, 426, 1234, 814, 646, 1336, 1903, 3302, 2585, 2716, 1454, 3260, 3377, 3725, 3593, 3700, 4496, 5026, 2559, 7514, 2274),
IZT_Favorables = c(1636, 258, 1347, 2164, 2340, 2287, 2391, 2706, 4559, 3534, 4179, 2232, 4031, 4153, 4557, 4872, 5320, 5854, 6946, 4015, 11323, 4060),
SLT_Favorables = c(9562, 2, 48, 656, 2299, 8854, 13483, 18035, 30956, 22883, 25113, 13004, 24282, 24967, 25280, 25648, 24879, 24555, 25053, 11794, 38172, 11610),
PESCER_Favorables = c(498, 0, 0, 0, 0, 343, 614, 813, 1727, 1505, 1112, 510, 1071, 1153, 1055, 1417, 1346, 1432, 1384, 322, 248, 304),
CH_No_Favorables = c(980, 1510, 1062, 1222, 939, 1195, 2076, 2300, 4528, 3851, 3395, 1670, 2459, 2725, 3787, 2999, 2710, 2596, 2424, 1470, 2873, 951),
GAM_No_Favorables = c(1388, 0, 0, 0, 0, 0, 0, 1474, 6086, 4267, 3976, 2279, 4449, 4519, 4667, 5349, 5607, 4997, 4863, 3183, 7111, 2214),
DV_No_Favorables = c(557, 120, 159, 289, 465, 494, 921, 1866, 2925, 1708, 2098, 786, 1658, 1890, 1853, 1713, 1623, 1932, 2007, 1333, 2623, 863),
IZT_No_Favorables = c(826, 448, 996, 2548, 2503, 2325, 2404, 2598, 4222, 2716, 2416, 1185, 2255, 2332, 2428, 2494, 2487, 2712, 2999, 1774, 3689, 1284),
SLT_No_Favorables = c(3752, 9, 20, 538, 2309, 10799, 16304, 20715, 28648, 16299, 13310, 6532, 10347, 11015, 10370, 10170, 10312, 10105, 9745, 4684, 12502, 3440),
PESCER_No_Favorables = c(269, 0, 0, 0, 0, 129, 321, 353, 681, 494, 543, 323, 424, 379, 331, 407, 324, 427, 342, 606, 570, 188)
)
# Crear una gráfica base
p_favorables <- ggplot(data_FnF, aes(Año))
# Agregar líneas y puntos para cada columna
p_favorables <- p_favorables +
geom_line(aes(y = CH_Favorables, color = "CH"), linetype = "solid") +
geom_point(aes(y = CH_Favorables, color = "CH")) +
geom_line(aes(y = GAM_Favorables, color = "GAM"), linetype = "solid") +
geom_point(aes(y = GAM_Favorables, color = "GAM")) +
geom_line(aes(y = DV_Favorables, color = "DV"), linetype = "solid") +
geom_point(aes(y = DV_Favorables, color = "DV")) +
geom_line(aes(y = IZT_Favorables, color = "IZT"), linetype = "solid") +
geom_point(aes(y = IZT_Favorables, color = "IZT")) +
geom_line(aes(y = SLT_Favorables, color = "SLT"), linetype = "solid") +
geom_point(aes(y = SLT_Favorables, color = "SLT")) +
geom_line(aes(y = PESCER_Favorables, color = "PESCER"), linetype = "solid") +
geom_point(aes(y = PESCER_Favorables, color = "PESCER"))
# Ajustar el escalado del eje X
p_favorables <- p_favorables + scale_x_continuous(breaks = data_FnF$Año)
# Configurar etiquetas y tema
p_favorables <- p_favorables +
labs(title = "Certificaciones Favorables en planteles",
x = "Año", y = "Certificación") +
scale_color_manual(name="Planteles",values = c(
"CH" = "red",
"GAM" = "blue",
"DV" = "green",
"IZT" = "brown",
"SLT" = "magenta",
"PESCER" = "orange"
))
# Imprimir la gráfica
print(p_favorables)
# Crear una gráfica base
p_Nofavorables <- ggplot(data_FnF, aes(Año))
# Agregar líneas y puntos para cada columna
p_Nofavorables <- p_Nofavorables +
geom_line(aes(y = CH_No_Favorables, color = "CH"), linetype = "solid") +
geom_point(aes(y = CH_No_Favorables, color = "CH")) +
geom_line(aes(y = GAM_No_Favorables, color = "GAM"), linetype = "solid") +
geom_point(aes(y = GAM_No_Favorables, color = "GAM")) +
geom_line(aes(y = DV_No_Favorables, color = "DV"), linetype = "solid") +
geom_point(aes(y = DV_No_Favorables, color = "DV")) +
geom_line(aes(y = IZT_No_Favorables, color = "IZT"), linetype = "solid") +
geom_point(aes(y = IZT_No_Favorables, color = "IZT")) +
geom_line(aes(y = SLT_No_Favorables, color = "SLT"), linetype = "solid") +
geom_point(aes(y = SLT_No_Favorables, color = "SLT")) +
geom_line(aes(y = PESCER_No_Favorables, color = "PESCER"), linetype = "solid") +
geom_point(aes(y = PESCER_No_Favorables, color = "PESCER"))
# Ajustar el escalado del eje X
p_Nofavorables <- p_Nofavorables + scale_x_continuous(breaks = data_FnF$Año)
# Configurar etiquetas y tema
p_Nofavorables <- p_Nofavorables +
labs(title = "Certificaciones No Favorables en planteles",
x = "Año", y = "Certificación") +
scale_color_manual(name="Planteles",values = c(
"CH" = "red",
"GAM" = "blue",
"DV" = "green",
"IZT" = "brown",
"SLT" = "magenta",
"PESCER" = "orange"
))
print(p_Nofavorables)
library(gridExtra)
plot_list <- list(p_favorables, p_Nofavorables)
grid.arrange(grobs = plot_list, nrow = 2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(gridExtra)
# Crear un conjunto de datos largo para facilitar la creación de gráficos
data_FnF_long <- data_FnF %>%
pivot_longer(cols = -Año, names_to = "Planteles_Casos", values_to = "Certificación")
# Separar el nombre de la columna en "Planteles" y "Casos"
data_FnF_long <- data_FnF_long %>%
separate(Planteles_Casos, c("Planteles", "Casos"), sep = "_")
# Definir colores claros y oscuros
colores_favorables <- c("CH" = "red", "GAM" = "blue", "DV" = "green",
"IZT" = "brown", "SLT" = "magenta", "PESCER" = "orange")
colores_no_favorables <- c("CH" = "lightcoral", "GAM" = "lightblue", "DV" = "lightgreen",
"IZT" = "lightbrown", "SLT" = "lightpink", "PESCER" = "lightyellow")
# Crear una lista para almacenar los gráficos
plot_list <- list()
# Crear y agregar gráficos por separado para cada plantel y caso
for (plantel in unique(data_FnF_long$Planteles)) {
for (caso in unique(data_FnF_long$Casos)) {
plot_data <- data_FnF_long %>%
filter(Planteles == plantel, Casos == caso)
p <- ggplot(plot_data, aes(x = Año, y = Certificación, fill = Planteles)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = paste("Certificaciones", caso, "en", plantel),
x = "Año",
y = "Certificación") +
scale_fill_manual(values = ifelse(caso == "Favorables", colores_favorables, colores_no_favorables))
plot_list[[length(plot_list) + 1]] <- p
}
}
# Organizar y mostrar los gráficos en una sola ventana
grid.arrange(grobs = plot_list, ncol = 2)
library(ggplot2)
library(dplyr)
library(tidyr)
library(gridExtra)
library(purrr)
# Crear un conjunto de datos largo para facilitar la creación de gráficos
data_FnF_long <- data_FnF %>%
pivot_longer(cols = -Año, names_to = "Planteles_Casos", values_to = "Certificación")
# Separar el nombre de la columna en "Planteles" y "Casos"
data_FnF_long <- data_FnF_long %>%
separate(Planteles_Casos, c("Planteles", "Casos"), sep = "_")
# Definir colores claros y oscuros
colores_favorables <- c("CH" = "red", "GAM" = "blue", "DV" = "green",
"IZT" = "brown", "SLT" = "magenta", "PESCER" = "orange")
colores_no_favorables <- c("CH" = "lightcoral", "GAM" = "lightblue", "DV" = "lightgreen",
"IZT" = "lightbrown", "SLT" = "lightpink", "PESCER" = "lightyellow")
# Crear un gráfico de barras
p1 <- ggplot(data_FnF, aes(x = factor(Año), y = CH_Favorables)) +
geom_bar(stat = "identity", fill = "red") +
labs(title = "Certificaciones Favorables",x = "Año",y = "CH"  ) + theme_minimal()
p7 <- ggplot(data_FnF, aes(x = factor(Año), y = CH_No_Favorables)) +
geom_bar(stat = "identity", fill = "#FFC0CB") +
labs(title = "Certificaciones No Favorables",x = "Año",y = "CH"  ) +theme_minimal()
p2 <- ggplot(data_FnF, aes(x = factor(Año), y = GAM_Favorables)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "",x = "Año",y = "GAM"  ) + theme_minimal()
p8 <- ggplot(data_FnF, aes(x = factor(Año), y = GAM_No_Favorables)) +
geom_bar(stat = "identity", fill = "lightblue") +
labs(title = "",x = "Año",y = "GAM"  ) +theme_minimal()
p3 <- ggplot(data_FnF, aes(x = factor(Año), y = DV_Favorables)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "",x = "Año",y = "DV"  ) +theme_minimal()
p9 <- ggplot(data_FnF, aes(x = factor(Año), y = DV_No_Favorables)) +
geom_bar(stat = "identity", fill = "lightgreen") +
labs(title = "",x = "Año",y = "DV"  ) +theme_minimal()
p4 <- ggplot(data_FnF, aes(x = factor(Año), y = IZT_Favorables)) +
geom_bar(stat = "identity", fill = "brown") +
labs(title = "",x = "Año",y = "IZT"  ) +theme_minimal()
p10 <- ggplot(data_FnF, aes(x = factor(Año), y = IZT_No_Favorables)) +
geom_bar(stat = "identity", fill = "#D2B48C") +
labs(title = "",x = "Año",y = "IZT"  ) +theme_minimal()
p5 <- ggplot(data_FnF, aes(x = factor(Año), y = SLT_Favorables)) +
geom_bar(stat = "identity", fill = "magenta") +
labs(title = "",x = "Año",y = "SLT"  ) +theme_minimal()
p11 <- ggplot(data_FnF, aes(x = factor(Año), y = SLT_No_Favorables)) +
geom_bar(stat = "identity", fill = "#FFB6C1") +
labs(title = "",x = "Año",y = "SLT"  ) +  theme_minimal()
p6 <- ggplot(data_FnF, aes(x = factor(Año), y = PESCER_Favorables)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "",x = "Año", y = "PESCER"  ) +theme_minimal()
p12 <- ggplot(data_FnF, aes(x = factor(Año), y = PESCER_No_Favorables)) +
geom_bar(stat = "identity", fill = "#FFD700") +
labs(title = "",x = "Año",y = "PESCER"  ) +theme_minimal()
print(p1)
print(p7)
print(p2)
print(p8)
print(p3)
print(p9)
print(p4)
print(p10)
print(p5)
print(p11)
print(p6)
print(p12)
# - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -
plot_list <- list(p1,p7,p2,p8,p3,p9,p4,p10,p5,p11,p6,p12)
grid.arrange(grobs = plot_list, ncol = 2)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
library(ggplot2)
library(dplyr)
library(tidyr)
library(gridExtra)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
# Crear un data frame a partir de la tabla
data_Planteles_FnF <- data.frame(
Plantel = c("CH", "GAM", "DV", "IZT", "SLT", "PESCER"),
C = c(84316, 184212, 57100, 84764, 381135, 16854),
NC = c(49722, 66429, 29883, 49641, 211925, 7111)
)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
data_Plantel_Lic <- data.frame(
Plantel = c("CH", "GAM", "DV", "IZT", "SLT", "PESCER"),
ISET = c(4628, 18211, 93, 14183, 36856, 29),
AyPC = c(30861, 17043, 1065, 1988, 41305, 38),
CPyAU = c(3875, 36315, 36016, 54457, 116407, 1436),
CAyCC = c(6, 15, 76, 1465, 2238, 0),
GENOMICAS = c(166, 119, 5886, 62, 460, 0),
CiSOC = c(588, 14410, 206, 588, 29077, 0),
COMYCULT = c(45230, 42077, 1413, 9207, 141630, 113),
CREACION = c(1966, 11903, 24891, 288, 25837, 383),
DERECHO = c(1805, 30905, 611, 1011, 3095, 21794),
FEHDI = c(1151, 7957, 12888, 421, 20571, 61),
HISTYSOCCON = c(884, 9658, 2018, 339, 25619, 0),
SOFTWARE = c(618, 11688, 84, 550, 16902, 33),
ISTU = c(9672, 7889, 42, 626, 14664, 5),
ISEI = c(1772, 10348, 166, 6625, 25524, 21),
ISENER = c(236, 160, 59, 205, 8701, 0),
MODELACION = c(142, 827, 61, 1888, 4698, 28),
NUTRICION = c(211, 6585, 234, 5028, 9378, 0),
PROMOCION = c(30101, 21931, 1158, 35379, 65514, 24),
PROTECCION = c(126, 2600, 16, 95, 4584, 0)
)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
#View(data_Plantel_Lic)
# Crear un marco de datos con los datos del Plantel CH
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
# Filtrar las filas con Valor distinto de cero
data_PESCER_filtered <- data_Plantel_Lic[data_Plantel_Lic$Plantel == "PESCER", ] %>%
select(-Plantel) %>%
pivot_longer(cols = everything(), names_to = "Licenciatura", values_to = "Valor") %>%
filter(Valor != 0)
# Reorganizar las categorías de las licenciaturas de mayor a menor
data_PESCER_filtered$Licenciatura <- reorder(data_PESCER_filtered$Licenciatura, -data_PESCER_filtered$Valor, FUN = desc)
# Crear un gráfico de barras agrupadas para el Plantel PESCER
p_PESCER <- ggplot(data_PESCER_filtered, aes(x = Licenciatura, y = Valor, fill = Licenciatura)) +
geom_bar(stat = "identity") +labs(title = "Plantel PESCER",x = "",y = "Certificaciones") +
theme_minimal() +theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "")
# Agregar etiquetas a las barras en sentido vertical
p_PESCER <- p_PESCER + geom_text(aes(label = Valor), vjust = -0.2, angle = 90)
print(p_PESCER)
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
data_SLT <- data_Plantel_Lic[data_Plantel_Lic$Plantel == "SLT", ]
# Transformar los datos a un formato largo
data_SLT_long <- tidyr::pivot_longer(data_SLT, cols = -Plantel, names_to = "Licenciatura", values_to = "Valor")
# Reorganizar las categorías de las licenciaturas de mayor a menor
data_SLT_long$Licenciatura <- reorder(data_SLT_long$Licenciatura, -data_SLT_long$Valor, FUN = desc)
# Crear un gráfico de barras agrupadas para el Plantel CH
p <- ggplot(data_SLT_long, aes(x = Licenciatura, y = Valor, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Plantel San Lorenzo Tezonco",x = "",y = "") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "")
# Agregar etiquetas a las barras en sentido vertical
p_SLT <- p + geom_text(aes(label = Valor), vjust = -0.2, angle = 90)
print(p_SLT)
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
data_IZT <- data_Plantel_Lic[data_Plantel_Lic$Plantel == "IZT", ]
# Transformar los datos a un formato largo
data_IZT_long <- tidyr::pivot_longer(data_IZT, cols = -Plantel, names_to = "Licenciatura", values_to = "Valor")
# Reorganizar las categorías de las licenciaturas de mayor a menor
data_IZT_long$Licenciatura <- reorder(data_IZT_long$Licenciatura, -data_IZT_long$Valor, FUN = desc)
# Crear un gráfico de barras agrupadas para el Plantel CH
p <- ggplot(data_IZT_long, aes(x = Licenciatura, y = Valor, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Plantel Iztapalapa",x = "",y = "") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "")
# Agregar etiquetas a las barras en sentido vertical
p_IZT <- p + geom_text(aes(label = Valor), vjust = -0.2, angle = 90)
print(p_IZT)
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
data_DV <- data_Plantel_Lic[data_Plantel_Lic$Plantel == "DV", ]
# Transformar los datos a un formato largo
data_DV_long <- tidyr::pivot_longer(data_DV, cols = -Plantel, names_to = "Licenciatura", values_to = "Valor")
# Reorganizar las categorías de las licenciaturas de mayor a menor
data_DV_long$Licenciatura <- reorder(data_DV_long$Licenciatura, -data_DV_long$Valor, FUN = desc)
# Crear un gráfico de barras agrupadas para el Plantel CH
p <- ggplot(data_DV_long, aes(x = Licenciatura, y = Valor, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Plantel Del Valle",x = "",y = "") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "")
# Agregar etiquetas a las barras en sentido vertical
p_DV <- p + geom_text(aes(label = Valor), vjust = -0.2, angle = 90)
print(p_DV)
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
data_GAM <- data_Plantel_Lic[data_Plantel_Lic$Plantel == "GAM", ]
# Transformar los datos a un formato largo
data_GAM_long <- tidyr::pivot_longer(data_GAM, cols = -Plantel, names_to = "Licenciatura", values_to = "Valor")
# Reorganizar las categorías de las licenciaturas de mayor a menor
data_GAM_long$Licenciatura <- reorder(data_GAM_long$Licenciatura, -data_GAM_long$Valor, FUN = desc)
# Crear un gráfico de barras agrupadas para el Plantel CH
p <- ggplot(data_CH_long, aes(x = Licenciatura, y = Valor, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Plantel Cuautepec",x = "",y = "") +
theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(fill = "")
plot_list <- list(p1,p7,p2,p8,p3,p9,p4,p10,p5,p11,p6,p12)
grid.arrange(grobs = plot_list, ncol = 2)
library(ggplot2)
library(scales)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
# Crear un data frame a partir de la tabla
data_Plantel_FnF <- data.frame(
Plantel = c("CH", "GAM", "DV", "IZT", "SLT", "PESCER"),
C = c(84316, 184212, 57100, 84764, 381135, 16854),
NC = c(49722, 66429, 29883, 49641, 211925, 7111))
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
p_F <- ggplot(data_Plantel_FnF, aes(x = Plantel, y = C, fill = Plantel)) +
geom_bar(stat = "identity")+
geom_text(aes(label = comma(C)), vjust = -0.2, angle = 60, size = 3) +
labs(title = "Certificación Favorable",x = "Plantel",y = "Certificaciones" ) +
scale_fill_manual(values = c("CH" = "red","GAM" = "blue","DV" = "green",
"IZT" = "brown","SLT" = "magenta","PESCER" = "orange")) +labs(fill = "") +
theme_minimal()
print(p_F)
# <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>> <<==>>
p_NF <- ggplot(data_Plantel_FnF, aes(x = Plantel, y = NC, fill = Plantel)) +
geom_bar(stat = "identity")+
geom_text(aes(label = comma(NC)), vjust = -0.2, angle = 60, size = 3) +
labs(title = "Certificaciòn No Favorable",x = "Plantel",y = "Certificaciones" ) +
scale_fill_manual(values = c("CH" = "red","GAM" = "blue","DV" = "green",
"IZT" = "brown","SLT" = "magenta","PESCER" = "orange")) +labs(fill = "") +
theme_minimal()
print(p_NF)
# >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><< >><<>><<
plot_list <- list(p_F,p_NF)
grid.arrange(grobs = plot_list, ncol = 2)
ggsave("graficoCertificacionPlantelFnF.pdf", width = 8, height = 6, units = "in")
# Crea un dataframe con los datos
data <- data.frame(
Licenciatura = c("ISET", "AyPC", "CPyAU", "CAyCC", "GENOMICAS", "CiSOC", "COMYCULT", "CREACION", "DERECHO", "FEHDI", "HISTYSOCCON", "SOFTWARE", "ISTU", "ISEI", "ISENER", "MODELACION", "NUTRICION", "PROMOCION", "PROTECCION"),
C = c(40221, 63532, 161383, 2865, 4429, 30339, 165426, 46718, 43184, 27880, 25704, 19503, 19246, 25305, 6545, 4922, 16725, 99276, 5178),
NC = c(33779, 28768, 87123, 935, 2264, 14530, 74244, 18550, 16037, 15169, 12814, 10372, 13652, 19151, 2816, 2722, 4711, 54831, 2243)
)
# Cargar la librería ggplot2
library(ggplot2)
# Reestructurar los datos en formato "long"
library(reshape2)
data_melted <- melt(data, id.vars = "Licenciatura")
# Crear un gráfico de barras apiladas
ggplot(data_melted, aes(x = Licenciatura, y = value, fill = variable)) +
geom_bar(stat = "identity") +
labs(
title = "Certificaciones por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones"
) +
scale_fill_manual(name = "Tipo de Certificación", values = c("C" = "blue", "NC" = "red")) +
theme_minimal() +
theme(legend.position = "top")
p_C <- ggplot(data, aes(x = Licenciatura, y = C)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Certificaciones (C) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (C)"
) +
theme_minimal()
# Crear un gráfico de barras para NC
p_NC <- ggplot(data, aes(x = Licenciatura, y = NC)) +
geom_bar(stat = "identity", fill = "red") +
labs(
title = "Certificaciones (NC) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (NC)"
) +
theme_minimal()
# Imprimir los gráficos
print(p_C)
print(p_NC)
p_C <- ggplot(data, aes(x = Licenciatura, y = C)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Certificaciones (C) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (C)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclina las etiquetas en un ángulo de 45 grados
# Crear un gráfico de barras para NC
p_NC <- ggplot(data, aes(x = Licenciatura, y = NC)) +
geom_bar(stat = "identity", fill = "red") +
labs(
title = "Certificaciones (NC) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (NC)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclina las etiquetas en un ángulo de 45 grados
# Imprimir los gráficos
print(p_C)
print(p_NC)
p_C <- ggplot(data, aes(x = Licenciatura, y = C)) +
geom_bar(stat = "identity", fill = "blue") +
labs(
title = "Certificaciones (C) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (C)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclina las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para C
p_C <- p_C + geom_text(aes(label = ifelse(C > 1000, format(C, big.mark = ","), as.character(C))),
vjust = -0.5, size = 2, angle = 60)
# Crear un gráfico de barras para NC
p_NC <- ggplot(data, aes(x = Licenciatura, y = NC)) +
geom_bar(stat = "identity", fill = "red") +
labs(
title = "Certificaciones (NC) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (NC)"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclina las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para NC
p_NC <- p_NC + geom_text(aes(label = ifelse(NC > 1000, format(NC, big.mark = ","), as.character(NC))),
vjust = -0.5, size = 2, angle = 60)
# Imprimir los gráficos
print(p_C)
print(p_NC)
colores <- c(
"ISET" = "red", "AyPC" = "blue", "CPyAU" = "green", "CAyCC" = "brown", "GENOMICAS" = "magenta",
"CiSOC" = "orange", "COMYCULT" = "pink", "CREACION" = "purple", "DERECHO" = "gray", "FEHDI" = "cyan",
"HISTYSOCCON" = "black", "SOFTWARE" = "violet", "ISTU" = "darkblue", "ISEI" = "darkgreen", "ISENER" = "lightgreen",
"MODELACION" = "gold", "NUTRICION" = "dodgerblue", "PROMOCION" = "darkred", "PROTECCION" = "darkorange"
)
# Crear un gráfico de barras para C
p_C <- ggplot(data, aes(x = Licenciatura, y = C, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Certificaciones (C) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (C)"
) +
scale_fill_manual(values = colores) +  # Asignar colores según el diccionario colores
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para C
p_C <- p_C + geom_text(aes(label = ifelse(C > 1000, format(C, big.mark = ","), as.character(C))),
vjust = -0.5, size = 2, angle = 60)
# Crear un gráfico de barras para NC
p_NC <- ggplot(data, aes(x = Licenciatura, y = NC, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Certificaciones (NC) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (NC)"
) +
scale_fill_manual(values = colores) +  # Asignar colores según el diccionario colores
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para NC
p_NC <- p_NC + geom_text(aes(label = ifelse(NC > 1000, format(NC, big.mark = ","), as.character(NC))),
vjust = -0.5, size = 2, angle = 60)
# Imprimir los gráficos
print(p_C)
print(p_NC)
p_C <- ggplot(data, aes(x = Licenciatura, y = C, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Certificaciones (C) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (C)"
) +
scale_fill_manual(values = colores) +  # Asignar colores según el diccionario colores
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")  # Inclinar las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para C
p_C <- p_C + geom_text(aes(label = ifelse(C > 1000, format(C, big.mark = ","), as.character(C))),
vjust = -0.5, size = 2, angle = 60)
# Crear un gráfico de barras para NC
p_NC <- ggplot(data, aes(x = Licenciatura, y = NC, fill = Licenciatura)) +
geom_bar(stat = "identity") +
labs(
title = "Certificaciones (NC) por Licenciatura",
x = "Licenciatura",
y = "Cantidad de Certificaciones (NC)"
) +
scale_fill_manual(values = colores) +  # Asignar colores según el diccionario colores
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")  # Inclinar las etiquetas en un ángulo de 45 grados
# Agregar etiquetas de valores para NC
p_NC <- p_NC + geom_text(aes(label = ifelse(NC > 1000, format(NC, big.mark = ","), as.character(NC))),
vjust = -0.5, size = 2, angle = 60)
# Imprimir los gráficos
print(p_C)
print(p_NC)

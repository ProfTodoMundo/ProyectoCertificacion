library(shiny); runApp('~/Desktop/conMdeMente/Encuesta1.R')
runApp('~/Desktop/conMdeMente')
temas <- c(
"Miedo al abandono",
"Felicidad autoimpuesta, Miedo al fracaso, Sociedad obsesionada con el éxito",
"La dificultad para 'dejar ir'",
"Incapacidad para relacionarse afectivamente con otros.",
"Ambiente laboral hostil y acoso en el trabajo.",
"Tipos de apego en la relación, responsabilidad afectiva",
"'Ghosting'; desaparecer o cortar contacto de forma abrupta y sin explicación",
"Trastornos de la Conducta Alimentaria",
"Ansiedad",
"Deprimido y no sé por qué",
"Estrés y escuela, estrés y familia, estrés y pareja",
"Manejo de emociones",
"Efectos del clasismo en la salud mental",
"Prevención del feminicidio",
"Qué son los trastornos mentales",
"¿Esquizofrenia, por qué se presenta?",
"Síndrome de Asperger, de qué estamos hablando",
"Qué es el TOC (Trastorno Obsesivo Compulsivo)",
"Demencia ¿tema de adultos mayores?"
)
sampletemas <- sample(temas)
sampletemas
runApp('~/Desktop/conMdeMente/Encuesta1.R')
webshot::install_phantomjs()
library(shiny); runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/docs/MiEncuesta.R')
runApp('~/Desktop/MiGithub/conMdeMente/MiEncuesta.R')
install.packages("kableExtra")
ConteoPlantel <- table(MiBDD$Plantel);
setwd("~/Desktop/MiGithub/ProyectoCertificacion/Repositorio")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
#setwd("~/Documents/CertProy/ArticuloCertGral")
setwd("~/Desktop/MiGithub/ProyectoCertificacion")
#setwd("~/Nextcloud/nubegeneral/CertProy/Resultados")
load("Repositorio/WkspaceprocessingNew.RData")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
library(ggplot2)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
View(MPG)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResProbCert1a    <- MPG[order(MPG$ProbCert1a,decreasing= TRUE), ];       View(ResProbCert1a);    # si
ResProbNuncaCert <- MPG[order(MPG$ProbNuncaCert,decreasing= TRUE), ];    View(ResProbNuncaCert); # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MaxIntCert       <- MPG[order(MPG$MaxIntSiCert,decreasing= TRUE), ];     View(MaxIntCert);      # si
MaxIntNuncaCertif  <- MPG[order(MPG$MaxIntNuncaCert,decreasing= TRUE), ];  View(MaxIntNuncaCertif); # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ModaIntNuncaCert <- MPG[order(MPG$ModeIntNuncaCert,decreasing= TRUE), ]; View(ModaIntNuncaCert) # si
ModaIntSiCert    <- MPG[order(MPG$ModeIntSiCert,decreasing= TRUE), ];    View(ModaIntSiCert)    # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MediaNuncaCert   <- MPG[order(MPG$MeanIntNuncaCert,decreasing= TRUE), ]; View(MediaNuncaCert);  # si
MediaIntSiCert   <- MPG[order(MPG$MeanIntSiCert,decreasing= TRUE), ];    View(MediaIntSiCert)   # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResProbCertPrimera <- ResProbCert1a %>% filter(ResProbCert1a$ProbCert1a>=0.9);
ResProbCertPrimera <- ResProbCertPrimera[,c(1,2)]
View(ResProbCertPrimera);
ResProbCertPrimera <- as.data.frame(ResProbCertPrimera)
write.csv(ResProbCertPrimera,'CSVFiles/ResultadosProbCertPrimera.csv')
print(xtable(ResProbCertPrimera,type="latex"),file="Tablas/TablaRPCPrimera.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResProbNuncaCertPrimeros <- ResProbNuncaCert %>% filter(ResProbNuncaCert$ProbNuncaCert>=0.75);
ResProbNuncaCertPrimeros <- ResProbNuncaCertPrimeros[,c(1,3,4)]; View(ResProbNuncaCertPrimeros)
write.csv(ResProbNuncaCertPrimeros,'CSVFiles/ResultadosProbNuncaCert.csv')
print(xtable(ResProbNuncaCertPrimeros,type="latex"),file="Tablas/TablaRPNuncaCPrimera.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMaxIntCert <- MaxIntCert %>% filter(MaxIntCert$MaxIntSiCert>=4);
ResMaxIntCert <- ResMaxIntCert[,c(1,8,9,11)]; View(ResMaxIntCert)
write.csv(ResMaxIntCert,'CSVFiles/ResultadosMaximIntCertifica.csv')
print(xtable(ResMaxIntCert,type="latex"),file="Tablas/TablaMaxIC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMaxIntNuncaCert <- MaxIntNuncaCertif%>% filter(MaxIntNuncaCertif$MaxIntNuncaCert>=4);
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,4,5,2,7)]; View(ResMaxIntNuncaCert);
write.csv(ResMaxIntNuncaCert,'CSVFiles/ResultadosMaxIntNuncaCert.csv')
print(xtable(ResMaxIntNuncaCert,type="latex"),file="Tablas/TablaRMaxINC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResModaIntNuncaCert <- ModaIntNuncaCert%>% filter(ModaIntNuncaCert$ModeIntNuncaCert>=2);
ResModaIntNuncaCert <- ResModaIntNuncaCert[, c(1,7,3,4)]; View(ResModaIntNuncaCert);
write.csv(ResModaIntNuncaCert,'CSVFiles/ResultadosModaIntNuncaCer.csv')
print(xtable(ResModaIntNuncaCert,type="latex"),file="Tablas/TablaRModaINC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResModaIntSiCert <- ModaIntSiCert%>% filter(ModaIntSiCert$MaxIntSiCert>=2);
ResModaIntSiCert <- ResModaIntSiCert[, c(1,11,8,9)]; View(ResModaIntSiCert);
write.csv(ResModaIntSiCert,'CSVFiles/ResultadosModaIntSiCert.csv')
print(xtable(ResModaIntSiCert,type="latex"),file="Tablas/TablaRModaISC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMediaNuncaCert <- MediaNuncaCert%>% filter(MediaNuncaCert$MeanIntNuncaCert>=2);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,5,3,4,7)]; View(ResMediaNuncaCert);
write.csv(ResMediaNuncaCert,'CSVFiles/ResultadosMediaNuncaCert.csv')
print(xtable(ResMediaNuncaCert,type="latex"),file="Tablas/TablaRMediaNC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMediaSiCert <- MediaIntSiCert%>% filter(MediaIntSiCert$MeanIntSiCert>=2)
ResMediaSiCert <- ResMediaSiCert[, c(1,9,8,10,11)]; View(ResMediaSiCert);
write.csv(ResMediaSiCert,'CSVFiles/ResultadosMediaIntSiCert.csv')
print(xtable(ResMediaSiCert,type="latex"),file="Tablas/TablaRMediaSC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
save.image("Repositorio/WkspreprocessingAnalisis.RData")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
xtable(ResProbCertPrimera,type="latex",file="Tablas/TablaRPCPa.tex")
xtable(ResProbNuncaCertPrimeros,type="latex",file="Tablas/TablaRPNCPa.tex")
xtable(ResMaxIntCert,type="latex",file="Tablas/TablaMICa.tex")
xtable(ResMaxIntNuncaCert,type="latex",file="Tablas/TablaRMINCa.tex")
xtable(ResModaIntNuncaCert,type="latex",file="Tablas/TablaRMINCa.tex")
xtable(ResModaIntSiCert,type="latex",file="Tablas/TablaRMISCa.tex")
xtable(ResMediaNuncaCert,type="latex",file="Tablas/TablaRMNCa.tex")
xtable(ResMediaSiCert,type="latex",file="Tablas/TablaRMSCa.tex")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
View(MiBDD)
summary(MiBDD)
#-----------------------------------------------------------------------------------------------------
MiBDD$Plantel <- factor(MiBDD$Plantel,
levels = c('CH','GAM','DV','IZT','SLT','PESCER1','PESCER2','PESCER3','PESCER4',
'PESCER5','PESCER6','PESCER7','PESCER8'),
labels = c('CH','GAM','DV','IZT','SLT','PESCER','PESCER','PESCER','PESCER',
'PESCER','PESCER','PESCER','PESCER'))
#-----------------------------------------------------------------------------------------------------
save.image("Repositorio/WkspceActualizado.RData")
DatosFinal <- MiBDD; write.csv(MiBDD,"CSVFiles/BDDActual.csv")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ConteoPlantel <- table(MiBDD$Plantel);
write.csv(ConteoPlantel,'CSVFiles/TablaConteoPlantel.csv')
print(xtable(ConteoPlantel,type="latex"),file="Tablas/TablaConteoPlantel.tex")
xtable(ConteoPlantel,type="latex",file="Tablas/aTablaConteoPlantel.tex")
ConteoLic     <- table(MiBDD$Lic)
write.csv(ConteoLic,'CSVFiles/TablaConteoLic.csv')
print(xtable(ConteoLic,type="latex"),file="Tablas/TablaConteoLic.tex")
xtable(ConteoLic,type="latex",file="TablaConteoLic.tex")
ConteoAnho <- table(MiBDD$Anho)
write.csv(ConteoAnho,'CSVFiles/TablaConteoAnho.csv')
print(xtable(ConteoAnho,type="latex"),file="Tablas/TablaConteoAnho.tex")
xtable(ConteoAnho,type="latex",file="TablaConteoAnho.tex")
ConteoPlantelCal <- table(MiBDD$Plantel,MiBDD$Cal)
write.csv(ConteoPlantelCal,'CSVFiles/TablaConteoPlantelCal.csv')
print(xtable(ConteoPlantelCal,type="latex"),file="Tablas/TablaConteoPlantelCal.tex")
xtable(ConteoPlantelCal,type="latex",file="TablaConteoPlantelCal.tex")
ConteoPlantelLic <- table(MiBDD$Plantel,MiBDD$Lic)
write.csv(ConteoPlantelLic,'CSVFiles/TablaConteoPlantelLic.csv')
print(xtable(ConteoPlantelLic,type="latex"),file="Tablas/TablaConteoPlantelLic.tex")
xtable(ConteoPlantelLic,type="latex",file="TablaConteoPlanteLic.tex")
ConteoPlantelMaterias <- table(MiBDD$Plantel,MiBDD$Materias)
write.csv(ConteoPlantelMaterias,'CSVFiles/TablaConteoPlantelMaterias.csv')
print(xtable(ConteoPlantelMaterias,type="latex"),file="Tablas/TablaConteoPlantelMaterias.tex")
xtable(ConteoPlantelMaterias,type="latex",file="TablaConteoPlantelMaterias.tex")
ConteoPlantelAnho <- table(MiBDD$Plantel,MiBDD$Anho)
write.csv(ConteoPlantelAnho,'CSVFiles/TablaConteoPlantelAnho.csv')
print(xtable(ConteoPlantelAnho,type="latex"),file="Tablas/TablaConteoPlantelAnho.tex")
xtable(ConteoPlantelAnho,type="latex",file="TablaConteoPlanteAnho.tex")
ConteoAnhoPlantel <- table(MiBDD$Anho,MiBDD$Plantel)
write.csv(ConteoAnhoPlantel,'CSVFiles/TablaConteoAnhoPlantel.csv')
print(xtable(ConteoAnhoPlantel,type="latex"),file="Tablas/TablaConteoAnhoPlantel.tex")
xtable(ConteoAnhoPlantel,type="latex",file="TablaConteoAnhoPlante.tex")
ConteoLicGen <- table(MiBDD$Lic,MiBDD$Gen)
write.csv(ConteoLicGen,'CSVFiles/TablaConteoLicGen.csv')
print(xtable(ConteoLicGen,type="latex"),file="Tablas/TablaConteoLicGen.tex")
xtable(ConteoLicGen,type="latex",file="TablaConteoLicGen.tex")
ConteoLicCal <- table(MiBDD$Lic,MiBDD$Cal)
write.csv(ConteoLicCal,'CSVFiles/TablaConteoLicCal.csv')
print(xtable(ConteoLicCal,type="latex"),file="Tablas/TablaConteoLicCal.tex")
xtable(ConteoLicCal,type="latex",file="TablaConteoLicCal.tex")
ConteoLicPlantel <- table(MiBDD$Lic,MiBDD$Plantel)
write.csv(ConteoLicPlantel,'CSVFiles/TablaConteoLicPlantel.csv')
print(xtable(ConteoLicPlantel,type="latex"),file="Tablas/TablaConteoLicPlantel.tex")
xtable(ConteoLicPlantel,type="latex",file="TablaConteoLicPlantel.tex")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ConteoPlantelCalAnho <- table(MiBDD$Plantel,MiBDD$Cal,MiBDD$Anho); print(ConteoPlantelCalAnho)
ConteoAnhoPlantelCal <- table(MiBDD$Anho,MiBDD$Plantel,MiBDD$Cal); print(ConteoAnhoPlantelCal)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ConteoPlantelGen <- table(MiBDD$Plantel,MiBDD$Gen); print(ConteoPlantelGen)
write.csv(ConteoPlantelGen,'CSVFiles/TablaConteoPlantelGen.csv')
print(xtable(ConteoPlantelGen,type="latex"),file="Tablas/TablaConteoPlantelGen.tex")
xtable(ConteoPlantelGen,type="latex",file="TablaConteoPlanteGen.tex")
ConteoGenPlantel <- table(MiBDD$Gen,MiBDD$Plantel)
write.csv(ConteoGenPlantel,'CSVFiles/TablaConteoGenPlantel.csv')
print(xtable(ConteoGenPlantel,type="latex"),file="Tablas/TablaConteoGenPlantel.tex")
xtable(ConteoGenPlantel,type="latex",file="TablaConteoGenPlantel.tex")
#-----------------------------------------------------------------------------------------------------
write.csv(ConteoAnhoPlantelCal,'CSVFiles/TablaConteoAnhoPlantelCal.csv')
write.csv(ConteoPlantelCalAnho,'CSVFiles/TablaConteoPlantelCalAnho.csv')
#-----------------------------------------------------------------------------------------------------
save.image("Repositorio/WkspceActualizado.RData")
#-----------------------------------------------------------------------------------------------------
#setwd("~/Desktop/MiGithub/CertProy/ArticuloCertGral")
setwd("~/Desktop/MiGithub/ProyectoCertificacion/Repositorio")
load("Repositorio/WkspceActualizado.RData")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
#setwd("~/Documents/CertProy/ArticuloCertGral")
setwd("~/Desktop/MiGithub/ProyectoCertificacion")
#setwd("~/Nextcloud/nubegeneral/CertProy/Resultados")
load("Repositorio/WkspaceprocessingNew.RData")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
library(ggplot2)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
View(MPG)
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResProbCert1a    <- MPG[order(MPG$ProbCert1a,decreasing= TRUE), ];       View(ResProbCert1a);    # si
ResProbNuncaCert <- MPG[order(MPG$ProbNuncaCert,decreasing= TRUE), ];    View(ResProbNuncaCert); # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MaxIntCert       <- MPG[order(MPG$MaxIntSiCert,decreasing= TRUE), ];     View(MaxIntCert);      # si
MaxIntNuncaCertif  <- MPG[order(MPG$MaxIntNuncaCert,decreasing= TRUE), ];  View(MaxIntNuncaCertif); # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ModaIntNuncaCert <- MPG[order(MPG$ModeIntNuncaCert,decreasing= TRUE), ]; View(ModaIntNuncaCert) # si
ModaIntSiCert    <- MPG[order(MPG$ModeIntSiCert,decreasing= TRUE), ];    View(ModaIntSiCert)    # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MediaNuncaCert   <- MPG[order(MPG$MeanIntNuncaCert,decreasing= TRUE), ]; View(MediaNuncaCert);  # si
MediaIntSiCert   <- MPG[order(MPG$MeanIntSiCert,decreasing= TRUE), ];    View(MediaIntSiCert)   # si
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResProbCertPrimera <- ResProbCert1a %>% filter(ResProbCert1a$ProbCert1a>=0.9);
ResProbCertPrimera <- ResProbCertPrimera[,c(1,2)]
View(ResProbCertPrimera);
ResProbCertPrimera <- as.data.frame(ResProbCertPrimera)
write.csv(ResProbCertPrimera,'CSVFiles/ResultadosProbCertPrimera.csv')
print(xtable(ResProbCertPrimera,type="latex"),file="Tablas/TablaRPCPrimera.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResProbNuncaCertPrimeros <- ResProbNuncaCert %>% filter(ResProbNuncaCert$ProbNuncaCert>=0.75);
ResProbNuncaCertPrimeros <- ResProbNuncaCertPrimeros[,c(1,3,4)]; View(ResProbNuncaCertPrimeros)
write.csv(ResProbNuncaCertPrimeros,'CSVFiles/ResultadosProbNuncaCert.csv')
print(xtable(ResProbNuncaCertPrimeros,type="latex"),file="Tablas/TablaRPNuncaCPrimera.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMaxIntCert <- MaxIntCert %>% filter(MaxIntCert$MaxIntSiCert>=4);
ResMaxIntCert <- ResMaxIntCert[,c(1,8,9,11)]; View(ResMaxIntCert)
write.csv(ResMaxIntCert,'CSVFiles/ResultadosMaximIntCertifica.csv')
print(xtable(ResMaxIntCert,type="latex"),file="Tablas/TablaMaxIC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMaxIntNuncaCert <- MaxIntNuncaCertif%>% filter(MaxIntNuncaCertif$MaxIntNuncaCert>=4);
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,4,5,2,7)]; View(ResMaxIntNuncaCert);
write.csv(ResMaxIntNuncaCert,'CSVFiles/ResultadosMaxIntNuncaCert.csv')
print(xtable(ResMaxIntNuncaCert,type="latex"),file="Tablas/TablaRMaxINC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResModaIntNuncaCert <- ModaIntNuncaCert%>% filter(ModaIntNuncaCert$ModeIntNuncaCert>=2);
ResModaIntNuncaCert <- ResModaIntNuncaCert[, c(1,7,3,4)]; View(ResModaIntNuncaCert);
write.csv(ResModaIntNuncaCert,'CSVFiles/ResultadosModaIntNuncaCer.csv')
print(xtable(ResModaIntNuncaCert,type="latex"),file="Tablas/TablaRModaINC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResModaIntSiCert <- ModaIntSiCert%>% filter(ModaIntSiCert$MaxIntSiCert>=2);
ResModaIntSiCert <- ResModaIntSiCert[, c(1,11,8,9)]; View(ResModaIntSiCert);
write.csv(ResModaIntSiCert,'CSVFiles/ResultadosModaIntSiCert.csv')
print(xtable(ResModaIntSiCert,type="latex"),file="Tablas/TablaRModaISC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMediaNuncaCert <- MediaNuncaCert%>% filter(MediaNuncaCert$MeanIntNuncaCert>=2);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,5,3,4,7)]; View(ResMediaNuncaCert);
write.csv(ResMediaNuncaCert,'CSVFiles/ResultadosMediaNuncaCert.csv')
print(xtable(ResMediaNuncaCert,type="latex"),file="Tablas/TablaRMediaNC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ResMediaSiCert <- MediaIntSiCert%>% filter(MediaIntSiCert$MeanIntSiCert>=2)
ResMediaSiCert <- ResMediaSiCert[, c(1,9,8,10,11)]; View(ResMediaSiCert);
write.csv(ResMediaSiCert,'CSVFiles/ResultadosMediaIntSiCert.csv')
print(xtable(ResMediaSiCert,type="latex"),file="Tablas/TablaRMediaSC.tex")
#  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
save.image("Repositorio/WkspreprocessingAnalisis.RData")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
xtable(ResProbCertPrimera,type="latex",file="Tablas/TablaRPCPa.tex")
xtable(ResProbNuncaCertPrimeros,type="latex",file="Tablas/TablaRPNCPa.tex")
xtable(ResMaxIntCert,type="latex",file="Tablas/TablaMICa.tex")
xtable(ResMaxIntNuncaCert,type="latex",file="Tablas/TablaRMINCa.tex")
xtable(ResModaIntNuncaCert,type="latex",file="Tablas/TablaRMINCa.tex")
xtable(ResModaIntSiCert,type="latex",file="Tablas/TablaRMISCa.tex")
xtable(ResMediaNuncaCert,type="latex",file="Tablas/TablaRMNCa.tex")
xtable(ResMediaSiCert,type="latex",file="Tablas/TablaRMSCa.tex")
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
View(MiBDD)
summary(MiBDD)
#-----------------------------------------------------------------------------------------------------
MiBDD$Plantel <- factor(MiBDD$Plantel,
levels = c('CH','GAM','DV','IZT','SLT','PESCER1','PESCER2','PESCER3','PESCER4',
'PESCER5','PESCER6','PESCER7','PESCER8'),
labels = c('CH','GAM','DV','IZT','SLT','PESCER','PESCER','PESCER','PESCER',
'PESCER','PESCER','PESCER','PESCER'))
save.image("Repositorio/WkspceActualizado.RData")
DatosFinal <- MiBDD; write.csv(MiBDD,"CSVFiles/BDDActual.csv")
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
ConteoPlantel <- table(MiBDD$Plantel);
write.csv(ConteoPlantel,'CSVFiles/TablaConteoPlantel.csv')
print(xtable(ConteoPlantel,type="latex"),file="Tablas/TablaConteoPlantel.tex")
xtable(ConteoPlantel,type="latex",file="Tablas/aTablaConteoPlantel.tex")
tinytex::reinstall_tinytex()
